
.container{
    background-color: rgb(0, 0, 0) !important;
    max-width: 2000px;
    height: 750px;
}
.owenoo{
    max-width: 1200px;
    margin: 50px 0 0 55px;
}
.container h1{
    font-family: 'Dancing Script', cursive;
    font-family: 'Eater', cursive;
    font-family: 'Roboto Mono', monospace;
    font-weight: bold;
    margin-bottom: 9px;
}
.card-title{
    font-weight: bold;
    color: beige;
}
.card img{
    height: 150px;
}
.card button:hover{
    background-color:  rgb(190, 190, 190);
    color: black;
}
.card{
    background-color: transparent;
    width: 250px;
    margin-top: 20px;
}
.box {
    --border-size: 3px;
    --border-angle: 0turn;
    background-image: conic-gradient(from var(--border-angle), #213,#112 50%,#213),
      conic-gradient(from var(--border-angle), transparent 20%, rgb(50, 139, 216), #f03);
    background-size: calc(100% - (var(--border-size) * 2))
        calc(100% - (var(--border-size) * 2)),
      cover;
    background-position: center center;
    background-repeat: no-repeat;
  
    animation: bg-spin 3s linear infinite;
  }
  @keyframes bg-spin {
    to {
      --border-angle: 1turn;
    }
  }
  .box:hover {
    animation-play-state: paused;
  }
  @property --border-angle {
    syntax: "<angle>";
    inherits: true;
    initial-value: 0turn;
  }
.card-text{
    color: rgb(190, 190, 190);
}
.titr{
    padding-top: 20px;
    font-family: 'Dancing Script', cursive;
    font-family: 'Eater', cursive;
    font-family: 'Roboto Mono', monospace;
}
/* .box {
  --border-size: 3px;
  --border-angle: 0turn;
  background-image: conic-gradient(from var(--border-angle), black,black,black),
    conic-gradient(from var(--border-angle), transparent 20%, rgb(255, 255, 255), rgb(192, 179, 182));
  background-size: calc(100% - (var(--border-size) * 2))
      calc(100% - (var(--border-size) * 2)),
    cover;
  background-position: center center;
  background-repeat: no-repeat;

  animation: bg-spin 3s linear infinite;
}
@keyframes bg-spin {
  to {
    --border-angle: 1turn;
  }
}
.box:hover {
  animation-play-state: paused;
}
@property --border-angle {
  syntax: "<angle>";
  inherits: true;
  initial-value: 0turn;
} */
